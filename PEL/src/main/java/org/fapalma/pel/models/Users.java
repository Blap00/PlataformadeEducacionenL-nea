package org.fapalma.pel.models;

import java.util.Date;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.Size;

@Entity
@Table(name = "users")
public class Users {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;  //PK
	
	@Email(message="Email must be valid")
    private String email; //AUTOGENERATED MAIL 2 letters first_name dot last_name at company (SET AUTO IN DEBUG)
	
	@Size(min=5, message="username must be greater than 5 characters")
	private String username;
	
	@Size(min=8, message="Password must be greater than 8 characters")
	private String contrasena;
	
	// Agrega este atributo para indicar si el usuario es administrador
    private boolean isAdmin;
    
    private boolean isActive;
    
    private boolean isDocente;
    
    private Integer tempAcad; //DEFINE BY 0, 1, 2, 3, 4, 5 ...
    
    @Size(min=5, message="first_name must be greater than 5 characters")
	private String first_name;

    @Size(min=5, message="last_name must be greater than 5 characters")
	private String last_name;
    
    @ManyToMany(mappedBy="carreer", cascade=CascadeType.ALL, fetch=FetchType.LAZY)
	private Carrera carreer;
    
    @ManyToMany(mappedBy="asignatura", cascade=CascadeType.ALL, fetch=FetchType.LAZY)
	private Asignaturas asginatura;
    
    @Size(min=5, message="direccion must be greater than 5 characters")
	private String direccion;
    
    @Size(min=5, message="Telephone number must be greater than 5 characters")
	private String Tel;
    
    @Column(updatable=false)
	@DateTimeFormat(pattern="yyyy-MM-dd")
	private Date createdAt;
	@DateTimeFormat(pattern="yyyy-MM-dd")
	private Date updatedAt;
	@DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date lastLogoutDate;

	public Users() {
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getContrasena() {
		return contrasena;
	}

	public void setContrasena(String contrasena) {
		this.contrasena = contrasena;
	}

	public boolean isAdmin() {
		return isAdmin;
	}

	public void setAdmin(boolean isAdmin) {
		this.isAdmin = isAdmin;
	}

	public boolean isActive() {
		return isActive;
	}

	public void setActive(boolean isActive) {
		this.isActive = isActive;
	}

	public boolean isDocente() {
		return isDocente;
	}

	public void setDocente(boolean isDocente) {
		this.isDocente = isDocente;
	}

	public Integer getTempAcad() {
		return tempAcad;
	}

	public void setTempAcad(Integer tempAcad) {
		this.tempAcad = tempAcad;
	}

	public String getFirst_name() {
		return first_name;
	}

	public void setFirst_name(String first_name) {
		this.first_name = first_name;
	}

	public String getLast_name() {
		return last_name;
	}

	public void setLast_name(String last_name) {
		this.last_name = last_name;
	}

	public Carrera getCarreer() {
		return carreer;
	}

	public void setCarreer(Carrera carreer) {
		this.carreer = carreer;
	}

	public Asignaturas getAsginatura() {
		return asginatura;
	}

	public void setAsginatura(Asignaturas asginatura) {
		this.asginatura = asginatura;
	}

	public String getDireccion() {
		return direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	public String getTel() {
		return Tel;
	}

	public void setTel(String tel) {
		Tel = tel;
	}
    
}
